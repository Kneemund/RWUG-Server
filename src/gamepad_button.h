#pragma once

#define GAMEPAD_BUTTON_A 0x8000
#define GAMEPAD_BUTTON_B 0x4000
#define GAMEPAD_BUTTON_X 0x2000
#define GAMEPAD_BUTTON_Y 0x1000
#define GAMEPAD_BUTTON_LEFT 0x0800
#define GAMEPAD_BUTTON_RIGHT 0x0400
#define GAMEPAD_BUTTON_UP 0x0200
#define GAMEPAD_BUTTON_DOWN 0x0100
#define GAMEPAD_BUTTON_ZL 0x0080
#define GAMEPAD_BUTTON_ZR 0x0040
#define GAMEPAD_BUTTON_L 0x0020
#define GAMEPAD_BUTTON_R 0x0010
#define GAMEPAD_BUTTON_PLUS 0x0008
#define GAMEPAD_BUTTON_MINUS 0x0004
#define GAMEPAD_BUTTON_HOME 0x0002
#define GAMEPAD_BUTTON_SYNC 0x0001
#define GAMEPAD_BUTTON_STICK_R 0x00020000
#define GAMEPAD_BUTTON_STICK_L 0x00040000
#define GAMEPAD_BUTTON_TV 0x00010000
#define GAMEPAD_STICK_R_EMULATION_LEFT 0x04000000
#define GAMEPAD_STICK_R_EMULATION_RIGHT 0x02000000
#define GAMEPAD_STICK_R_EMULATION_UP 0x01000000
#define GAMEPAD_STICK_R_EMULATION_DOWN 0x00800000
#define GAMEPAD_STICK_L_EMULATION_LEFT 0x40000000
#define GAMEPAD_STICK_L_EMULATION_RIGHT 0x20000000
#define GAMEPAD_STICK_L_EMULATION_UP 0x10000000
#define GAMEPAD_STICK_L_EMULATION_DOWN 0x08000000

struct gamepad_button {
    int button_code;
    int evdev_button_code;
};

const struct gamepad_button GAMEPAD_BUTTON_DATA[] = {
    { GAMEPAD_BUTTON_A, BTN_EAST },
    { GAMEPAD_BUTTON_B, BTN_SOUTH },
    { GAMEPAD_BUTTON_X, BTN_WEST },
    { GAMEPAD_BUTTON_Y, BTN_NORTH },
    { GAMEPAD_BUTTON_LEFT, BTN_DPAD_LEFT },
    { GAMEPAD_BUTTON_RIGHT, BTN_DPAD_RIGHT },
    { GAMEPAD_BUTTON_UP, BTN_DPAD_UP },
    { GAMEPAD_BUTTON_DOWN, BTN_DPAD_DOWN },
    { GAMEPAD_BUTTON_ZL, BTN_TL2 },
    { GAMEPAD_BUTTON_ZR, BTN_TR2 },
    { GAMEPAD_BUTTON_L, BTN_TL },
    { GAMEPAD_BUTTON_R, BTN_TR },
    { GAMEPAD_BUTTON_PLUS, BTN_START },
    { GAMEPAD_BUTTON_MINUS, BTN_SELECT },
    { GAMEPAD_BUTTON_HOME, BTN_MODE },
    { GAMEPAD_BUTTON_STICK_R, BTN_THUMBR },
    { GAMEPAD_BUTTON_STICK_L, BTN_THUMBL },
};

const int GAMEPAD_BUTTON_DATA_LENGTH = sizeof(GAMEPAD_BUTTON_DATA) / sizeof(GAMEPAD_BUTTON_DATA[0]);